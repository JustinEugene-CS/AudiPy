name: Publish Python Package to PyPI

permissions: write-all
  
on:
  push:
    branches:
      - main  # Change if using a different branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
    
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          pip install numpy opencv-python scipy
          
      - name: Auto-increment Version
        run: |
          VERSION_FILE="setup.py"
          OLD_VERSION=$(grep -oP "(?<=version=')[^']+" $VERSION_FILE)
          NEW_VERSION=$(echo $OLD_VERSION | awk -F. '{$NF = $NF + 1;} 1' OFS=.)
          sed -i "s/version='$OLD_VERSION'/version='$NEW_VERSION'/" $VERSION_FILE
          echo "New version: $NEW_VERSION"
          git config --global user.name "RobertNickStephens"
          git config --global user.email "rns3z@mtmail.mtsu.edu"
          git add $VERSION_FILE
          git commit -m "Bump version to $NEW_VERSION"
          git push
          
      - name: Clean Old Builds  # âœ… This ensures old versions don't interfere
        run: |
          rm -rf dist/ build/ *.egg-info/
      
      - name: Build Package
        run: python -m build

      - name: Pypi Official Token
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_KEY }}
        run: twine upload --repository pypi dist/*
